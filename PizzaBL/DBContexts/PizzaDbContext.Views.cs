//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(PizzaBL.DBContexts.PizzaDbContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6d942446704f3c2e7bea3ae90c7879247333f715fb3df2dbc5dd84c42a75e82f))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets6d942446704f3c2e7bea3ae90c7879247333f715fb3df2dbc5dd84c42a75e82f : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "6d942446704f3c2e7bea3ae90c7879247333f715fb3df2dbc5dd84c42a75e82f"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Pizza")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.PizzaToppings")
            {
                return GetView1();
            }

            if (extentName == "PizzaDbContext.Pizza")
            {
                return GetView2();
            }

            if (extentName == "PizzaDbContext.PizzaToppings")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Topping")
            {
                return GetView4();
            }

            if (extentName == "PizzaDbContext.Toppings")
            {
                return GetView5();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Pizza.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pizza
        [CodeFirstDatabaseSchema.Pizza](T1.Pizza_pizzaId, T1.Pizza_name, T1.Pizza_pizzaBase, T1.Pizza_veg, T1.Pizza_nonVeg)
    FROM (
        SELECT 
            T.pizzaId AS Pizza_pizzaId, 
            T.name AS Pizza_name, 
            CAST(T.pizzaBase AS [Edm.Int32]) AS Pizza_pizzaBase, 
            T.veg AS Pizza_veg, 
            T.nonVeg AS Pizza_nonVeg, 
            True AS _from0
        FROM PizzaDbContext.Pizza AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.PizzaToppings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PizzaToppings
        [CodeFirstDatabaseSchema.PizzaToppings](T1.PizzaToppings_id, T1.PizzaToppings_pizzaId, T1.PizzaToppings_toppingId)
    FROM (
        SELECT 
            T.id AS PizzaToppings_id, 
            T.pizzaId AS PizzaToppings_pizzaId, 
            T.toppingId AS PizzaToppings_toppingId, 
            True AS _from0
        FROM PizzaDbContext.PizzaToppings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PizzaDbContext.Pizza.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Pizza
        [PizzaBL.DBContexts.Pizza](T1.Pizza_pizzaId, T1.Pizza_name, T1.Pizza_pizzaBase, T1.Pizza_veg, T1.Pizza_nonVeg)
    FROM (
        SELECT 
            T.pizzaId AS Pizza_pizzaId, 
            T.name AS Pizza_name, 
            CAST(T.pizzaBase AS [PizzaBL.DBContexts.PizzaBase]) AS Pizza_pizzaBase, 
            T.veg AS Pizza_veg, 
            T.nonVeg AS Pizza_nonVeg, 
            True AS _from0
        FROM CodeFirstDatabase.Pizza AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PizzaDbContext.PizzaToppings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PizzaToppings
        [PizzaBL.DBContexts.PizzaToppings](T1.PizzaToppings_id, T1.PizzaToppings_pizzaId, T1.PizzaToppings_toppingId)
    FROM (
        SELECT 
            T.id AS PizzaToppings_id, 
            T.pizzaId AS PizzaToppings_pizzaId, 
            T.toppingId AS PizzaToppings_toppingId, 
            True AS _from0
        FROM CodeFirstDatabase.PizzaToppings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Topping.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Topping
        [CodeFirstDatabaseSchema.Topping](T1.Topping_toppingId, T1.Topping_topping)
    FROM (
        SELECT 
            T.toppingId AS Topping_toppingId, 
            CAST(T.topping AS [Edm.Int32]) AS Topping_topping, 
            True AS _from0
        FROM PizzaDbContext.Toppings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PizzaDbContext.Toppings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Toppings
        [PizzaBL.DBContexts.Topping](T1.Topping_toppingId, T1.Topping_topping)
    FROM (
        SELECT 
            T.toppingId AS Topping_toppingId, 
            CAST(T.topping AS [PizzaBL.DBContexts.ToppingType]) AS Topping_topping, 
            True AS _from0
        FROM CodeFirstDatabase.Topping AS T
    ) AS T1");
        }
    }
}
